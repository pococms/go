#!/bin/zsh
# ts1
# Generates a multipage site in a temp directory.
# Visual demonstrations of:
# - global and page themes
# - suppressing header, nav, footer, aside
# 
# Command-line options:
# 
# --theme {theme name}
# -t {theme name}
#
# Example:
#  
#   ts1 --theme pocodocs
#   ts1 --t pocodocs
#

# Default global theme. Can be altered with --theme command line option
THEME=poquito

# UTILITY FUNCTIONS
function pause(){
  echo "Please press enter..."
  read nothing_at_all
}

function generate_square_svg() {
cat <<EOM > $1/square.svg
<svg width='256' height='128' xmlns='http://www.w3.org/2000/svg' version='1.1' >
<rect width='256' height='128'  fill="white" stroke="black" stroke-width=".2"/>
<text text-anchor="middle" x="50%" y="50%" dy=".35em" font-family="sans-serif" font-size="24px" fill="gray">$2</text>  
</svg>
EOM
}

# PARSE COMMAND LINE
echo ""
while :; do
    case $1 in
    
   	 -t|--theme)
   		 if [ -n "$2" ]; then
   			 THEME=$2
         echo "Chose theme ${THEME}"
         pause
   			 shift 2
   			 continue
   		 else
   			 echo "ERROR: --theme needs a theme name. The default is ${THEME}. \nExample:\n\t${0} --theme pocodocs\n" >&2
   			 #printf 'ERROR: "--theme" needs a theme name.\nExample:\n\t${0} --theme pocodocs\n' >&2
   			 exit 1
   		 fi
   		 ;;
   		 
   	 --)
   		 shift
   		 break
   		 ;;
   		 
   	 --?*)
   		 printf 'WARNING: Unknown option %s ignored\n' "$1" >&2
   		 ;;
   		 
   	 *)
   		 # No more options. Break out of loop.
   		 break;
    esac
    
    command shift
done



# Create a temporary directory.
# Supposed to work in both MacOS and Linux. Thank you, timo-tijhof 
# https://unix.stackexchange.com/questions/30091/fix-or-alternative-for-mktemp-in-os-x
tmpdir=$(mktemp -d 2>/dev/null || mktemp -d -t 'tmpdir')
echo "Creating poco project at temp directory ${tmpdir}"
poco -new $tmpdir
ALLDIRS=$tmpdir/level2/level3/
mkdir -p  $ALLDIRS
if [[ $? -gt 0 ]]
then
  echo "Error creating subdirs"
fi


# xxx
# Generate the page index.md from the text
# directly under the read until the text directly
# above the second EOM
read -r -d '' INDEX << EOM
---
theme: "${THEME}"
---
# Project build tests 
## Click these pages 1 directory levels down
* [Level 2 page 1](level2/page2-1.html) (Uses Tufte theme)
* [Level 2 page 2](level2/page2-2.html) (Overrides parts of theme)
## Click these pages 2 directory levels down
* [Level 3 page 1](level2/level3/page3-1.html)
## Theme variations
* [Suppress header](suppress-header.html)
* [Suppress nav](suppress-nav.html)
* [Suppress aside](suppress-aside.html)
* [Suppress footer](suppress-footer.html)

## Square SVG image

![square image here?](./square.svg)

[Home](index.html)
EOM

# Generate the page supress-header.md from the text
# directly under the read until the text directly
# above the second EOM
read -r -d '' SUPPRESS_HEADER << EOM
---
header: "SUPPRESS"
---
# This page should have no header. 
## Compare to [home page](index.html)
## Click these pages 1 directory levels down
* [Level 2 page 1](level2/page2-1.html) (Uses Tufte theme)
* [Level 2 page 2](level2/page2-2.html)
## Click these pages 2 directory levels down
* [Level 3 page 1](level2/level3/page3-1.html)
## Theme variations
* [Suppress header](suppress-header.html)
* [Suppress nav](suppress-nav.html)
* [Suppress aside](suppress-aside.html)
* [Suppress footer](suppress-footer.html)
* [Home](index.html)
EOM

# Generate the page supress-aside.md from the text
# directly under the read until the text directly
# above the second EOM
read -r -d '' SUPPRESS_ASIDE << EOM
---
aside: "SUPPRESS"
---
# This page should have no aside. 
## Compare to [home page](index.html)
## Click these pages 1 directory levels down
* [Level 2 page 1](level2/page2-1.html) (Uses Tufte theme)
* [Level 2 page 2](level2/page2-2.html)
## Click these pages 2 directory levels down
* [Level 3 page 1](level2/level3/page3-1.html)
## Theme variations
* [Suppress header](suppress-header.html)
* [Suppress nav](suppress-nav.html)
* [Suppress aside](suppress-aside.html)
* [Suppress footer](suppress-footer.html)
* [Home](index.html)
EOM

# Generate the page supress-nav.md from the text
# directly under the read until the text directly
# above the second EOM
read -r -d '' SUPPRESS_NAV << EOM
---
nav: "SUPPRESS"
---
# This page should have no navbar. 
## Compare to [home page](index.html)
## Click these pages 1 directory levels down
* [Level 2 page 1](level2/page2-1.html) (Uses Tufte theme)
* [Level 2 page 2](level2/page2-2.html)
## Click these pages 2 directory levels down
* [Level 3 page 1](level2/level3/page3-1.html)
## Theme variations
* [Suppress header](suppress-header.html)
* [Suppress nav](suppress-nav.html)
* [Suppress aside](suppress-aside.html)
* [Suppress footer](suppress-footer.html)
* [Home](index.html)
EOM

# Generate the page supress-footer.md from the text
# directly under the read until the text directly
# above the second EOM
read -r -d '' SUPPRESS_FOOTER << EOM
---
footer: "SUPPRESS"
---
# This page should have no footer. 
## Compare to [home page](index.html)
## Click these pages 1 directory levels down
* [Level 2 page 1](level2/page2-1.html) (Uses Tufte theme)
* [Level 2 page 2](level2/page2-2.html)
## Click these pages 2 directory levels down
* [Level 3 page 1](level2/level3/page3-1.html)
## Theme variations
* [Suppress header](suppress-header.html)
* [Suppress nav](suppress-nav.html)
* [Suppress aside](suppress-aside.html)
* [Suppress footer](suppress-footer.html)
* [Home](index.html)
EOM

# Generate the page named page2_1.md from the text
# directly under the read until the text directly
# above the second EOM
read -r -d '' PAGE_2_1 << EOM
---
title: "level2/page2-1"
pagetheme: "tufte"
---
# Subdirectory level1 is 1 level below root
## Page level2/page2-1.html
## Click these pages 1 directory level down
* [Level 3 page 1](level3/page3-1.html)
* [Home](./index.html)
EOM

# Generate the page named page2_2.md from the text
# directly under the read until the text directly
# above the second EOM
read -r -d '' PAGE_2_2 << EOM
---
title: "level2/page2-2"
styles: 
- "article>h2{font-weight:bold;color:red;}"
- "article>p{font-size:1.25em;font-style:italic;font-family:'Times New Roman', Times, serif;}"
---
# This page demonstrate style overrides

Note how h2 headers are red, and the body style is now an italic serif font.

## Page level2/page2-2.html
## Click these pages 1 directory level down
* [Level 3 page 1](level3/page3-1.html)
* [Home](./index.html)
EOM


# Generate the page named page3_1.md from the text
# directly under the read until the text directly
# above the second EOM
read -r -d '' PAGE_3_1 << EOM
---
title: "level3/page3-1"
---
# Subdirectory level3 is 2 level below root
## Page level2/level3/page3-1.html
## Click these pages 1 directory level up 
* [Level 2 page 1](../page2-1.html)
* [Level 2 page 2](../page2-2.html)
* [Home](./index.html)
EOM


#echo "\nlevel2 dir:"
#ls $tmpdir/level2
#echo "\nlevel3 dir:"
#ls $tmpdir/level3

generate_square_svg $tmpdir "256x128"
echo $INDEX > $tmpdir/index.md
echo $SUPPRESS_HEADER > $tmpdir/suppress-header.md
echo $SUPPRESS_ASIDE > $tmpdir/suppress-aside.md
echo $SUPPRESS_NAV > $tmpdir/suppress-nav.md
echo $SUPPRESS_FOOTER > $tmpdir/suppress-footer.md
echo $PAGE_2_1 > $tmpdir/level2/page2-1.md
echo $PAGE_2_2 > $tmpdir/level2/page2-2.md
echo $PAGE_3_1 > $tmpdir/level2/level3/page3-1.md
poco $tmpdir
if [[ $? -gt 0 ]]
then
  echo "Poco was unable to create the project"
  echo "Contents of the directory:"
  ls ${tmpdir}
else
  echo "Project created successfully"
  #echo "Opening in local browser and local server"
  open $tmpdir/WWW/index.html

  #
  #poco -serve
fi

