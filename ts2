#!/bin/zsh
# ts2
# Generates a complete theme gallery in a temp directory.
# Visual demonstrations of both high and low content pages:
# - suppressing header, nav, article, footer, aside
# - Aside left/right

# Create an array of theme names
declare -a themes=(
  'base'
  'electro' #
  'hack'
  'informer'
  'newman'
  'paper'
  'pasteboard'
  'pocodocs'
  'rawdog'
  'retro'
  'skyscraper'
  'tufte'
  )




# Exit to the OS with a message and error code.
# $1 is the message to display
# $2 is the error code
function quit_exit() {
  echo $1
  exit $2
}

# Create a temporary directory.
# Supposed to work in both MacOS and Linux. Thank you, timo-tijhof 
# https://unix.stackexchange.com/questions/30091/fix-or-alternative-for-mktemp-in-os-x
tmpdir=$(mktemp -d 2>/dev/null || mktemp -d -t 'tmpdir')
echo "Creating poco project at temp directory ${tmpdir}"
poco -new $tmpdir              
ALLDIRS=$tmpdir/level2/level3/                                     
mkdir -p  $ALLDIRS                                                                    
if [[ $? -gt 0 ]]
then
  quit_exit "Error creating root directory at ${tmpdir}" 1
fi

# Read the contents of file .poco/demo/mdemo.md into the
# shell variable $MDEMO
read -r -d '' MDEMO << EOM
$(<.poco/demo/mdemo.md)
EOM


# Text of a high-content (long) page
read -r -d '' hcontent << EOM

## **High-content** page demo 
* Does the sidebar look OK?
* Resize page to check responsiveness

"High-content" means that the page is  longer than most screens. 
When testing themes it's useful to see how the footer and sidebar interact with long articles.
$MDEMO
EOM

# Text of a low-content (short) page
read -r -d '' lpcontent << EOM

## **Low-content** page demo 
* Does the sidebar look OK?
* Resize page to check responsiveness

"Low-content" means that the page is shorter than most screens. 
When testing themes it's useful to see how the sidebar behaves when it's longer than the 
content of the article. This sentence shows how wide the article area is without taking up too much vertical space.  

EOM


# Generate links to high-content page tests
read -r -d '' hcpanel << EOM
High-content tests: 
[Default](long_page.html). [Article only](long_page_article_only.html), Aside [right](long_page_aside_right.html), [left](long_page_aside_left.html)  
**Try hiding** [header](long_page_no_header.html),
[nav](long_page_no_nav.html),
[article](long_page_no_article.html)
[aside](long_page_no_aside.html),
[footer](long_page_no_footer.html)
[Everything!](long_page_no_everything.html)


[Theme home](index.html), 
[All themes](../index.html)
EOM

# Create the index page for this theme directory
# $1 is the theme name
# $2 is the tmp directory of the home page 
function themehome() {
# Create the index for this dir
echo "---\npagetheme: ${1}\n---\n# ${1} theme" > $2/index.md
echo $hcpanel >> $2/index.md
echo $lcpanel >> $2/index.md
read -r -d '' page << EOM
---
pagetheme: "${1}"
---
EOM
}

# Generate links to low-content page tests
read -r -d '' lcpanel << EOM
Low-content tests: 
[Default](short_page.html). [Article only](short_page_article_only.html), Aside [right](short_page_aside_right.html), [left](short_page_aside_left.html)  
**Try hiding** [header](short_page_no_header.html),
[nav](short_page_no_nav.html),
[article](short_page_no_article.html)
[aside](short_page_no_aside.html),
[footer](short_page_no_footer.html)
[Everything!](short_page_no_everything.html)


[Theme home](index.html), 
[All themes](../index.html)
EOM


# Central location for long-content page demo
# $1 is the theme name
# $2 is the directory for the page
function long_page() {
read -r -d '' page << EOM
---
pagetheme: "${1}"
---

# Theme $1
$hcontent
EOM
echo $page >> $2/long_page.md
}

# Central location for low-content page demo
# It points to variation such as low content without header,
# low content without nav, etc. 
# $1 is the theme name
# $2 is the directory for the page
function short_page() {
read -r -d '' page << EOM
---
pagetheme: "${1}"
---

# Theme $1
$hcontent
$hcpanel
EOM
echo $page >> $2/short_page.md
}

###########################################################
# GENERATE VARIATIONS ON THEMES, HIGH-CONTENT PAGES
###########################################################

# -------------------------------------
# high-content page, article only
# -------------------------------------
#
## $1 is the page theme
# $2 is the directory for the page
function long_page_article_only() {
read -r -d '' page << EOM
---
pagetheme: "${1}"

header: "SUPPRESS"
nav: "SUPPRESS"
aside: "SUPPRESS"
footer: "SUPPRESS"
---
# Theme $1
$hcontent
### *Right aside* 
$hcpanel
EOM
echo $page >> $2/long_page_article_only.md
}

# -------------------------------------
# high-content page, aside right
# -------------------------------------
#
## $1 is the page theme
# $2 is the directory for the page
function long_page_aside_right() {
read -r -d '' page << EOM
---
pagetheme: "${1}"
aside: "right"
---
# Theme $1
$hcontent
### *Right aside* 
$hcpanel
EOM
echo $page >> $2/long_page_aside_right.md
}

# -------------------------------------
# High-content page, aside left
# -------------------------------------
#
## $1 is the page theme
# $2 is the directory for the page
function long_page_aside_left() {
read -r -d '' page << EOM
---
pagetheme: "${1}"
aside: "left"
---
# Theme $1
$hcontent
### *Left aside* 
$hcpanel
EOM
echo $page >> $2/long_page_aside_left.md
}

# -------------------------------------
# High-content page, no header
# -------------------------------------
#
# $1 is the page theme
# $2 is the directory for the page
function long_page_no_header() {
read -r -d '' page << EOM
---
pagetheme: "${1}"
header: "SUPPRESS"
---
# Theme $1
$hcontent
$hcpanel
### *Header* suppressed
EOM
echo $page >> $2/long_page_no_header.md
}

# -------------------------------------
# High-content page, no nav 
# -------------------------------------
#
# $1 is the page theme
# $2 is the directory for the page
function long_page_no_nav() {
read -r -d '' page << EOM
---
pagetheme: "${1}"
nav: "SUPPRESS"
---
# Theme $1
$hcontent
### *Nav* suppressed
$hcpanel
EOM
echo $page >> $2/long_page_no_nav.md
}

# -------------------------------------
# High-content page, no article
# -------------------------------------
#
# $1 is the page theme
# $2 is the directory for the page
function long_page_no_article() {
read -r -d '' page << EOM
---
pagetheme: "${1}"
article: "SUPPRESS"
---
# Theme $1
$hcontent
### *Nav* suppressed
$hcpanel
EOM
echo $page >> $2/long_page_no_article.md
}

# -------------------------------------
# High-content page, no aside 
# -------------------------------------
#
# $1 is the page theme
# $2 is the directory for the page
function long_page_no_aside() {
read -r -d '' page << EOM
---
pagetheme: "${1}"
article: "SUPPRESS"
---
# Theme $1
$hcontent
### *Nav* suppressed
$hcpanel
EOM
echo $page >> $2/long_page_no_aside.md
}




# -------------------------------------
# High-content page, no header
# -------------------------------------
#
# $1 is the page theme
# $2 is the directory for the page
function long_page_no_header() {
read -r -d '' page << EOM
---
pagetheme: "${1}"
header: "SUPPRESS"
---
# Theme $1
$hcontent
$hcpanel
### *Header* suppressed
EOM
echo $page >> $2/long_page_no_header.md
}

# -------------------------------------
# High-content page, no nav 
# -------------------------------------
#
# $1 is the page theme
# $2 is the directory for the page
function long_page_no_nav() {
read -r -d '' page << EOM
---
pagetheme: "${1}"
nav: "SUPPRESS"
---
# Theme $1
$hcontent
### *Nav* suppressed
$hcpanel
EOM
echo $page >> $2/long_page_no_nav.md
}


# -------------------------------------
# High-content page, no footer 
# -------------------------------------
#
## $1 is the page theme
# $2 is the directory for the page
function long_page_no_footer() {
read -r -d '' page << EOM
---
pagetheme: "${1}"
footer: "SUPPRESS"
---
# Theme $1
$hcontent
### *Footer* suppressed
$hcpanel
EOM
echo $page >> $2/long_page_no_footer.md
}

# -------------------------------------
# High-content page, no anything
# -------------------------------------
#
# $1 is the page theme
# $2 is the directory for the page
function long_page_no_everything() {
read -r -d '' page << EOM
---
pagetheme: "${1}"
header: "SUPPRESS"
nav: "SUPPRESS"
aside: "SUPPRESS"
article: "SUPPRESS"
footer: "SUPPRESS"
---
# Theme $1
$hcontent
### *Everything* suppressed: header, nav, article, footer
$hcpanel
EOM
echo $page >> $2/long_page_no_everything.md
}


###########################################################
# GENERATE VARIATIONS ON THEMES, LOW-CONTENT PAGES
###########################################################

# -------------------------------------
# Low-content page, article only
# -------------------------------------
#
# $1 is the page theme
# $2 is the directory for the page
function short_page_article_only() {
read -r -d '' page << EOM
---
pagetheme: "${1}"
header: "SUPPRESS"
nav: "SUPPRESS"
aside: "SUPPRESS"
footer: "SUPPRESS"
---
# Theme $1
$lpcontent
### *Everything but article* suppressed: header, nav, aside, footer
$lcpanel
EOM
echo $page >> $2/short_page_article_only.md
}

# -------------------------------------
# Low-content page, aside right
# -------------------------------------
#
## $1 is the page theme
# $2 is the directory for the page
function short_page_aside_right() {
read -r -d '' page << EOM
---
pagetheme: "${1}"
aside: "right"
---
# Theme $1
$lpcontent
### *Right aside* 
$lcpanel
EOM
echo $page >> $2/short_page_aside_right.md
}

# -------------------------------------
# Low-content page, aside left
# -------------------------------------
#
## $1 is the page theme
# $2 is the directory for the page
function short_page_aside_left() {
read -r -d '' page << EOM
---
pagetheme: "${1}"
aside: "left"
---
# Theme $1
$lpcontent
### *Left aside* 
$lcpanel
EOM
echo $page >> $2/short_page_aside_left.md
}


# -------------------------------------
# Low-content page, no header
# -------------------------------------
#
# $1 is the page theme
# $2 is the directory for the page
function short_page_no_header() {
read -r -d '' page << EOM
---
pagetheme: "${1}"
header: "SUPPRESS"
---
# Theme $1
$lpcontent
$lcpanel
### *Header* suppressed
EOM
echo $page >> $2/short_page_no_header.md
}

# -------------------------------------
# Low-content page, no nav 
# -------------------------------------
#
# $1 is the page theme
# $2 is the directory for the page
function short_page_no_nav() {
read -r -d '' page << EOM
---
pagetheme: "${1}"
nav: "SUPPRESS"
---
# Theme $1
$lpcontent
### *Nav* suppressed
$lcpanel
EOM
echo $page >> $2/short_page_no_nav.md
}

# -------------------------------------
# Low-content page, no article
# -------------------------------------
#
# $1 is the page theme
# $2 is the directory for the page
function short_page_no_article() {
read -r -d '' page << EOM
---
pagetheme: "${1}"
article: "SUPPRESS"
---
# Theme $1
$lpcontent
### *Nav* suppressed
$lcpanel
EOM
echo $page >> $2/short_page_no_article.md
}



# -------------------------------------
# Low-content page, no aside 
# -------------------------------------
#
## $1 is the page theme
# $2 is the directory for the page
function short_page_no_aside() {
read -r -d '' page << EOM
---
pagetheme: "${1}"
aside: "SUPPRESS"
---
# Theme $1
$lpcontent
### *Aside* suppressed
$lcpanel
EOM
echo $page >> $2/short_page_no_aside.md
}


# -------------------------------------
# Low-content page, no footer 
# -------------------------------------
#
## $1 is the page theme
# $2 is the directory for the page
function short_page_no_footer() {
read -r -d '' page << EOM
---
pagetheme: "${1}"
footer: "SUPPRESS"
---
# Theme $1
$lpcontent
### *Footer* suppressed
$lcpanel
EOM
echo $page >> $2/short_page_no_footer.md
}

# -------------------------------------
# Low-content page, no anything
# -------------------------------------
#
# $1 is the page theme
# $2 is the directory for the page
function short_page_no_everything() {
read -r -d '' page << EOM
---
pagetheme: "${1}"
header: "SUPPRESS"
nav: "SUPPRESS"
aside: "SUPPRESS"
article: "SUPPRESS"
footer: "SUPPRESS"
---
# Theme $1
$lpcontent
### *Everything* suppressed: header, nav, article, footer
$lcpanel
EOM
echo $page >> $2/short_page_no_everything.md
}










function main_loop() {
# Loop through the array of themes

# Start the navigation panel listing all themes
echo "\n" > $tmpdir/navthemes.md
echo "## Themes and variations" >> $tmpdir/navthemes.md
for theme in "${themes[@]}";
  do
    # Create a directory for each theme.
    dir=$tmpdir/$theme
    mkdir -p $dir
    themehome $theme $dir

    long_page $theme $dir
    long_page_article_only $theme $dir
    long_page_aside_right $theme $dir
    long_page_aside_left $theme $dir
    long_page_no_header $theme $dir
    long_page_no_nav $theme $dir
    long_page_no_article $theme $dir
    long_page_no_aside $theme $dir
    long_page_no_footer $theme $dir
    long_page_no_everything $theme $dir


    short_page $theme $dir
    short_page_article_only $theme $dir
    short_page_aside_right $theme $dir
    short_page_aside_left $theme $dir
    short_page_no_header $theme $dir
    short_page_no_nav $theme $dir
    short_page_no_article $theme $dir
    short_page_no_aside $theme $dir
    short_page_no_footer $theme $dir
    short_page_no_everything $theme $dir


    echo "[${theme}]($theme/index.html) ">> $tmpdir/navthemes.md
    #read -n fook
  done
cat $tmpdir/navthemes.md  > $tmpdir/index.md
echo "Project created successfully"
poco $tmpdir
open $tmpdir/WWW/index.html
#echo "Project should have been built in ${tmpdir}:"
#ls -lat $tmpdir
#s -lat $tmpdir/paper
quit_exit "That's all folks" 0
}

main_loop

