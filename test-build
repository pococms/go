#!/bin/zsh
# Create a temporary directory.
# Supposed to work in both MacOS and Linux. Thank you, timo-tijhof 
# https://unix.stackexchange.com/questions/30091/fix-or-alternative-for-mktemp-in-os-x
tmpdir=$(mktemp -d 2>/dev/null || mktemp -d -t 'tmpdir')
echo "Run poco on nonexistent directory"
poco $tmpdir
poco foo
if [ $? -eq 0 ]; then
  echo "poco status:  success"
else
  echo "poco status: error ${?}"
fi

PAGE1=page1.md

declare -A arr
arr[0,0]="w"     
arr[0,1]="w-script"
arr[0,2]="w-yaml"  
 
arr[1,0]="debut/gallery"
arr[1,1]="dg-script"
arr[1,2]="dg-yaml"  
 
arr[2,0]="pillar"
arr[2,1]="pillar-script"
arr[2,2]="yml-pillar"            

COUNT=${#arr[@]}
echo "Number of elements: ${COUNT}" 
 
 
# List just the themes 
echo "\nList themes:"
for ((i=0; i<$COUNT/3; i++))
do
  echo "${arr[$i,0]}"                
done

# List the scripts 
echo "\nList scripts:"
for ((i=0; i<$COUNT/3; i++))
do
  echo "${arr[$i,1]}"
done
#
# List the YAML files
echo "\nList YAML files:"
for ((i=0; i<$COUNT/3; i++))
do
  echo "${arr[$i,2]}"
done


# Displays prompt, and waits for user to answer 
# with either a Y or N. Repeats prompt until
# it gets one of those two.
# Return 0 if answer was Y,
# return 1 if answer was N.
# 
# Answer is in the global variable $?
#
# Example usage:
#   wait_for_yes "Please enter y or n "
wait_for_yes() {
  while :; do
    echo -n "${1} "
    read answer
    case "$answer" in
      [Yy])
        return 0
        ;;
      [Nn])
        return 1
        ;;
      *)
        ;;
    esac
  done
}




# Generate a page at peer level to the home page in the project
# Writes its contents to $PAGE1_TEXT
echo "Creating ${PAGE1}"
read -r -d '' PAGE1_TEXT << EOM
# Project build tests 
[Home](index.html)
EOM

echo About to create $PAGE1 from $PAGE1_TEXT 
echo $PAGE1_TEXT > $PAGE1

#generate_page() $PAGE1 $PAGE1_TEXT
ls -lat $PAGE1
# Creates the page named $1 in directory $2
function generate_page() {
  echo "Generating ${PAGE1}"
  echo $PAGE1_TEXT > $PAGE1 
  echo "Is ${PAGE1} here?"
  ls ${PAGE1} 
}


## CLEAN UP
wait_for_yes "Delete temporary file ${tmpdir}?"
if [ $? == 0 ]; then
  rm -rf $tmpdir
else
  echo "Temporary file ${tmpdir} has not been deleted"
fi



